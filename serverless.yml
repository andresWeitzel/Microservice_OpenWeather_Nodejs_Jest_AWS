
service: microservice-openweather-nodejs-jest-aws

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  memorySize: 512
  timeout: 30
  environment: ${file(./serverless-ssm.yml)}

plugins:
  - serverless-offline-ssm
  - serverless-offline

functions:
  # Health Check
  healthCheck:
    handler: src/controllers/info/health/check.handler
    events:
      - http:
          path: /v1/health
          method: get
          private: false

  # Weather Endpoints
  getWeatherById:
    handler: src/controllers/weather/get-by-id.handler
    events:
      - http:
          path: /v1/weather/current/{cityId}
          method: get
          private: false
          
  getWeatherByCoordinates:
    handler: src/controllers/weather/get-by-coordinates.handler
    events:
      - http:
          path: /v1/weather/current/coordinates
          method: get
          private: false
          
  getWeatherByLocation:
    handler: src/controllers/weather/get-by-location.handler
    events:
      - http:
          path: /v1/weather/current/location
          method: get
          private: false
          
  getWeatherByZipcode:
    handler: src/controllers/weather/get-by-zipcode.handler
    events:
      - http:
          path: /v1/weather/current/zipcode
          method: get
          private: false

  # Enhanced Weather Endpoints
  getWeatherByIdEnhanced:
    handler: src/controllers/weather/get-by-id-enhanced.handler
    events:
      - http:
          path: /v1/weather/current/{cityId}/enhanced
          method: get
          private: false
          
  getWeatherByCoordinatesEnhanced:
    handler: src/controllers/weather/get-by-coordinates-enhanced.handler
    events:
      - http:
          path: /v1/weather/current/coordinates/enhanced
          method: get
          private: false
          
  getWeatherByLocationEnhanced:
    handler: src/controllers/weather/get-by-location-enhanced.handler
    events:
      - http:
          path: /v1/weather/current/location/enhanced
          method: get
          private: false
          
  getWeatherByZipcodeEnhanced:
    handler: src/controllers/weather/get-by-zipcode-enhanced.handler
    events:
      - http:
          path: /v1/weather/current/zipcode/enhanced
          method: get
          private: false
          
  # Forecast Endpoints
  getForecastByDays:
    handler: src/controllers/forecast/get-by-days.handler
    events:
      - http:
          path: /v1/forecast/days
          method: get
          private: false
          
  getForecastByDaysEnhanced:
    handler: src/controllers/forecast/get-by-days-enhanced.handler
    events:
      - http:
          path: /v1/forecast/days/enhanced
          method: get
          private: false

  # Info Endpoints
  getCityIds:
    handler: src/controllers/info/city-ids/get-city-ids.handler
    events:
      - http:
          path: /v1/info/cities
          method: get
          private: false
          
          
  # API Documentation and Metrics
  getSwagger:
    handler: src/controllers/docs/get-swagger.handler
    events:
      - http:
          path: /v1/docs
          method: get
          private: false
          
  getSwaggerUI:
    handler: src/controllers/docs/swagger-ui.handler
    events:
      - http:
          path: /v1/swagger-ui
          method: get
          private: false
          
  getOpenAPI:
    handler: src/controllers/docs/get-openapi.handler
    events:
      - http:
          path: /v1/openapi.yaml
          method: get
          private: false
          
  getMetrics:
    handler: src/controllers/metrics/get-metrics.handler
    events:
      - http:
          path: /v1/metrics
          method: get
          private: false
          
custom:
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4002
  serverless-offline-ssm:
    stages:
      - dev
    ssm: ${file(./serverless-ssm.yml)}
