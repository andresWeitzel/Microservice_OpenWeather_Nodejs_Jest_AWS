
service: microservice-openweather-nodejs-jest-aws

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1
  memorySize: 512
  timeout: 30
  environment: ${file(./serverless-ssm.yml)}

plugins:
  - serverless-offline-ssm
  - serverless-offline

functions:
  # CORS OPTIONS Handler
  corsOptions:
    handler: src/controllers/cors-options.handler
    events:
      - http:
          path: /v1/health
          method: options
          private: false
          cors: true

  # Health Check
  healthCheck:
    handler: src/controllers/info/health/check.handler
    events:
      - http:
          path: /v1/health
          method: get
          private: false
          cors: true

  # Weather Endpoints
  getWeatherById:
    handler: src/controllers/weather/get-by-id.handler
    events:
      - http:
          path: /v1/weather/id/{cityId}
          method: get
          private: false
          cors: true
          
  getWeatherByCoordinates:
    handler: src/controllers/weather/get-by-coordinates.handler
    events:
      - http:
          path: /v1/weather/coordinates/{lat}/{lon}
          method: get
          private: false
          cors: true
          
  getWeatherByLocation:
    handler: src/controllers/weather/get-by-location.handler
    events:
      - http:
          path: /v1/weather/location/{location}
          method: get
          private: false
          cors: true
          
  getWeatherByZipcode:
    handler: src/controllers/weather/get-by-zipcode.handler
    events:
      - http:
          path: /v1/weather/zipcode/{zipcode}/{countryCode}
          method: get
          private: false
          cors: true
          
  getWeatherWithUnits:
    handler: src/controllers/weather/get-with-units.handler
    events:
      - http:
          path: /v1/weather/units/{location}/{units}
          method: get
          private: false
          cors: true
          
  getWeatherWithLanguage:
    handler: src/controllers/weather/get-with-language.handler
    events:
      - http:
          path: /v1/weather/language/{location}/{language}
          method: get
          private: false
          cors: true
          
  getWeatherByCombined:
    handler: src/controllers/weather/get-by-combined.handler
    events:
      - http:
          path: /v1/weather/combined/{location}/{units}/{language}
          method: get
          private: false
          cors: true

  # Enhanced Weather Endpoints
  getWeatherByIdEnhanced:
    handler: src/controllers/weather/get-by-id-enhanced.handler
    events:
      - http:
          path: /v1/weather-enhanced/id/{cityId}
          method: get
          private: false
          cors: true
          
  getWeatherByCoordinatesEnhanced:
    handler: src/controllers/weather/get-by-coordinates-enhanced.handler
    events:
      - http:
          path: /v1/weather-enhanced/coordinates/{lat}/{lon}
          method: get
          private: false
          cors: true
          
  getWeatherByLocationEnhanced:
    handler: src/controllers/weather/get-by-location-enhanced.handler
    events:
      - http:
          path: /v1/weather-enhanced/location/{location}
          method: get
          private: false
          cors: true
          
  getWeatherByZipcodeEnhanced:
    handler: src/controllers/weather/get-by-zipcode-enhanced.handler
    events:
      - http:
          path: /v1/weather-enhanced/zipcode/{zipcode}/{countryCode}
          method: get
          private: false
          cors: true
          
  getWeatherByCombinedEnhanced:
    handler: src/controllers/weather/get-by-combined-enhanced.handler
    events:
      - http:
          path: /v1/weather-enhanced/combined/{location}/{units}/{language}
          method: get
          private: false
          cors: true
          
  # Forecast Endpoints
  getForecastByDays:
    handler: src/controllers/forecast/get-by-days.handler
    events:
      - http:
          path: /v1/forecast/days/{days}
          method: get
          private: false
          cors: true
          
  getForecastByDaysEnhanced:
    handler: src/controllers/forecast/get-by-days-enhanced.handler
    events:
      - http:
          path: /v1/forecast/days/{days}/enhanced
          method: get
          private: false
          cors: true

  getForecastByCompare:
    handler: src/controllers/forecast/get-by-compare.handler
    events:
      - http:
          path: /v1/forecast/compare
          method: get
          private: false
          cors: true
          
  getForecastByCompareEnhanced:
    handler: src/controllers/forecast/get-by-compare-enhanced.handler
    events:
      - http:
          path: /v1/forecast/compare/enhanced
          method: get
          private: false
          cors: true

  getForecastByEvents:
    handler: src/controllers/forecast/get-by-events.handler
    events:
      - http:
          path: /v1/forecast/events
          method: get
          private: false
          cors: true
          
  getForecastByEventsEnhanced:
    handler: src/controllers/forecast/get-by-events-enhanced.handler
    events:
      - http:
          path: /v1/forecast/events/enhanced
          method: get
          private: false
          cors: true

  getForecastByHourly:
    handler: src/controllers/forecast/get-by-hourly.handler
    events:
      - http:
          path: /v1/forecast/hourly
          method: get
          private: false
          cors: true
          
  getForecastByHourlyEnhanced:
    handler: src/controllers/forecast/get-by-hourly-enhanced.handler
    events:
      - http:
          path: /v1/forecast/hourly/enhanced
          method: get
          private: false
          cors: true

  getForecastByInterval:
    handler: src/controllers/forecast/get-by-interval.handler
    events:
      - http:
          path: /v1/forecast/interval
          method: get
          private: false
          cors: true
          
  getForecastByIntervalEnhanced:
    handler: src/controllers/forecast/get-by-interval-enhanced.handler
    events:
      - http:
          path: /v1/forecast/interval/enhanced
          method: get
          private: false
          cors: true

  getForecastByWeekly:
    handler: src/controllers/forecast/get-by-weekly.handler
    events:
      - http:
          path: /v1/forecast/weekly
          method: get
          private: false
          cors: true
          
  getForecastByWeeklyEnhanced:
    handler: src/controllers/forecast/get-by-weekly-enhanced.handler
    events:
      - http:
          path: /v1/forecast/weekly/enhanced
          method: get
          private: false
          cors: true

  # Info Endpoints
  getCityIds:
    handler: src/controllers/info/city-ids/get-city-ids.handler
    events:
      - http:
          path: /v1/cities/{cityName}
          method: get
          private: false
          cors: true
      - http:
          path: /v1/cities/{cityName}/{countryCode}
          method: get
          private: false
          cors: true
          
          
  # API Documentation and Metrics
  getSwagger:
    handler: src/controllers/docs/get-swagger.handler
    events:
      - http:
          path: /v1/docs
          method: get
          private: false
          cors: true
          
  getSwaggerUI:
    handler: src/controllers/docs/swagger-ui.handler
    events:
      - http:
          path: /v1/swagger-ui
          method: get
          private: false
          cors: true
          
  getOpenAPI:
    handler: src/controllers/docs/get-openapi.handler
    events:
      - http:
          path: /v1/openapi.yaml
          method: get
          private: false
          cors: true
          
  getMetrics:
    handler: src/controllers/metrics/get-metrics.handler
    events:
      - http:
          path: /v1/metrics
          method: get
          private: false
          cors: true
          
custom:
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4002
  serverless-offline-ssm:
    stages:
      - dev
    ssm: ${file(./serverless-ssm.yml)}
